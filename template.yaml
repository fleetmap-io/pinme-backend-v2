AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Pinme backend v2

Globals:
  Function:
    Timeout: 30
    Environment:
      Variables:
        TRACCAR_ADMIN_USER: '{{resolve:secretsmanager:traccar:SecretString:username}}'
        TRACCAR_ADMIN_PASS: '{{resolve:secretsmanager:traccar:SecretString:password}}'
        TRACCAR_API_BASE_PATH: '{{resolve:secretsmanager:traccar:SecretString:base_path}}'
        DB_HOST: '{{resolve:secretsmanager:db:SecretString:host}}'
        DB_USER: '{{resolve:secretsmanager:db:SecretString:username}}'
        DB_PASSWORD: '{{resolve:secretsmanager:db:SecretString:password}}'
        DB_DATABASE: '{{resolve:secretsmanager:db:SecretString:database}}'
        DB_HOST_READER: '{{resolve:secretsmanager:db:SecretString:host_reader}}'
        DB_HOST_POSITIONS: '{{resolve:secretsmanager:db:SecretString:host_positions}}'
        DB_HOST_POSITIONS_READER: '{{resolve:secretsmanager:db:SecretString:host_positions_reader}}'
        USER_POOL_ID: '{{resolve:ssm:/traccar/user-pool-id}}'
        IPINFO_TOKEN: df58ccf730ab1c
        DEVICE_IGNITION_OFF_TABLE: !Ref DevicesIgnitionOff
        QUEUE_S3_DAILY_MIGRATOR_UNIT: !Ref SQSS3DailyMigratorUnit
        QUEUE_EVENTS_ARN: !GetAtt PushEventsQueue.Arn
        QUEUE_LOCATIONS_ARN: !GetAtt PushLocationsQueue.Arn
        S3_BUCKET: !Ref responsesBucket
        USERS: !Ref TraccarUserLogins

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.10.0/24

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.11.0/24

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatElasticIP.AllocationId
      SubnetId: !Ref PublicSubnet

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NATGateway

  PrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  NatElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Name
          Value: pinme-backend-v2

  MainFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 2048
      FunctionName: pinme-backend-main-function
      Handler: app.mainFunction
      Runtime: nodejs16.x
      CodeUri: ./app/
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonCognitoPowerUser
      VpcConfig:
        SubnetIds:
          - !Ref PrivateSubnet
        SecurityGroupIds:
          - !Ref SecurityGroup
      Events:
        Api:
          Type: Api
          Properties:
            Path: /backend
            Method: any
  ProcessEventsAndLocationsQueue:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: pinme-backend-event-and-locations-consumer
      MemorySize: 512
      Timeout: 900
      CodeUri: ./app/
      Handler: index.eventsAndPositionsConsumer
      Runtime: nodejs16.x
      VpcConfig:
        SubnetIds:
          - !Ref PrivateSubnet
        SecurityGroupIds:
          - !Ref SecurityGroup
      Events:
        QueueEvents:
          Type: SQS
          Properties:
            Queue: !GetAtt PushEventsQueue.Arn
            BatchSize: 50
            MaximumBatchingWindowInSeconds: 3
            ScalingConfig:
              MaximumConcurrency: 60
        QueueLocations:
          Type: SQS
          Properties:
            Queue: !GetAtt PushLocationsQueue.Arn
            BatchSize: 50
            MaximumBatchingWindowInSeconds: 3
            ScalingConfig:
              MaximumConcurrency: 60
      Policies:
        - AmazonDynamoDBFullAccess
        - SecretsManagerReadWrite
        - AmazonSESFullAccess
  PinmeApi:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: pinme-backend-pinme-api
      CodeUri: ./app/
      Handler: pinmeapi.main
      Runtime: nodejs16.x
      MemorySize: 512
      Timeout: 100
      Policies:
        - SecretsManagerReadWrite
        - AmazonDynamoDBFullAccess
        - AmazonCognitoPowerUser
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            Path: /pinmeapi
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            Path: /pinmeapi/{proxy+}
            Method: ANY
        ProxyScheduler:
          Type: Api
          Properties:
            Path: /scheduler
            Method: ANY
        ProxySchedulerGreedy:
          Type: Api
          Properties:
            Path: /scheduler/{proxy+}
            Method: ANY
  S3DailyMigrator:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: pinme-backend-s3-daily-migrator
      CodeUri: ./S3DailyMigrator/
      Handler: S3DailyMigrator::S3DailyMigrator.Function::FunctionHandler
      Runtime: dotnet6
      MemorySize: 1024
      Timeout: 900
      Policies:
        - AmazonSQSFullAccess
      VpcConfig:
        SubnetIds:
          - !Ref PrivateSubnet
        SecurityGroupIds:
          - !Ref SecurityGroup
      Events:
        EveryDay:
          Type: Schedule
          Properties:
            Schedule: cron(5 0 * * ? *)
  S3DailyMigratorUnit:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: pinme-backend-s3-daily-migrator-unit
      CodeUri: ./S3DailyMigrator/
      Handler: S3DailyMigrator::S3DailyMigrator.Function::FunctionHandlerSQS
      Runtime: dotnet6
      MemorySize: 256
      Timeout: 120
      Policies:
        - AmazonSQSFullAccess
        - AmazonS3FullAccess
      VpcConfig:
        SubnetIds:
          - !Ref PrivateSubnet
        SecurityGroupIds:
          - !Ref SecurityGroup
      Events:
        SQSEvenet:
          Type: SQS
          Properties:
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 10
            Queue: !GetAtt SQSS3DailyMigratorUnit.Arn
  S3DailyMigratorUnit3G:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: pinme-backend-daily-migrator-unit-3g
      CodeUri: ./S3DailyMigrator/
      Handler: S3DailyMigrator::S3DailyMigrator.Function::FunctionHandlerSQS
      Runtime: dotnet6
      MemorySize: 3000
      Timeout: 120
      Policies:
        - AmazonSQSFullAccess
        - AmazonS3FullAccess
      VpcConfig:
        SubnetIds:
          - !Ref PrivateSubnet
        SecurityGroupIds:
          - !Ref SecurityGroup
      Events:
        SQSS3:
          Type: SQS
          Properties:
            BatchSize: 1
            Queue: !GetAtt SQSS3DailyMigratorUnitDL.Arn
  CloudWatchFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: pinme-backend-cloudwatch
      MemorySize: 1024
      Timeout: 60
      CodeUri: app/
      Handler: cloudwatch.putMetrics
      Runtime: nodejs16.x
      Events:
        Scheduled:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
            Name: everyMinute
            Description: cloudwatch
            Enabled: True
        Scheduled2:
          Type: Schedule
          Properties:
            Schedule: rate(2 minutes)
            Name: every3Minutes
            Description: cloudwatch
            Enabled: True
      VpcConfig:
        SubnetIds:
          - !Ref PrivateSubnet
        SecurityGroupIds:
          - !Ref SecurityGroup
      Policies:
          - CloudWatchFullAccess
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Lambda function
      VpcId: !Ref VPC

  PushLocationsQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 900
      QueueName: push-locations-queue

  PushEventsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: push-events-queue
      VisibilityTimeout: 900

  DevicesIgnitionOff:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: devicesIgnitionOff
      PrimaryKey:
        Name: deviceId
        Type: Number
  TraccarUserLogins:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: TraccarUserLogins
      PrimaryKey:
        Name: user
        Type: String

  SQSS3DailyMigratorUnit:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      QueueName: 'S3DailyMigratorUnit.fifo'
      VisibilityTimeout: 120
      MessageRetentionPeriod: 1209600
      ContentBasedDeduplication: true
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - 'SQSS3DailyMigratorUnitDL'
            - 'Arn'
        maxReceiveCount: 2

  SQSS3DailyMigratorUnitDL:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      QueueName: 'S3DailyMigratorUnitDL.fifo'
      VisibilityTimeout: 120
      MessageRetentionPeriod: 1209600
      ContentBasedDeduplication: true
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - 'SQSS3DailyMigratorUnitDLDL'
            - 'Arn'
        maxReceiveCount: 3

  SQSS3DailyMigratorUnitDLDL:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      QueueName: 'S3DailyMigratorUnitDLDL.fifo'
      VisibilityTimeout: 30
      MessageRetentionPeriod: 1209600
      ContentBasedDeduplication: true

  responsesBucket:
    Type: AWS::S3::Bucket

Outputs:
  ElasticIPAddress:
    Description: Elastic IP Address
    Value: !Ref NatElasticIP
  APIEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/${ServerlessRestApi.Stage}/"
  MainFunctionLogGroup:
    Description: CloudWatch Logs log group for main function
    Value:
      !Sub
        - "https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logsV2:log-groups/log-group/%252Faws%252Flambda%252F${FunctionName}"
        - FunctionName: !Ref MainFunction
  ProcessEventsAndLocationsQueueLogGroup:
    Description: CloudWatch Logs log group for ProcessEventsAndLocationsQueue
    Value:
      !Sub
      - "https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logsV2:log-groups/log-group/%252Faws%252Flambda%252F${FunctionName}"
      - FunctionName: !Ref ProcessEventsAndLocationsQueue
  PinmeApiLogGroup:
    Description: CloudWatch Logs log group for PinmeApi
    Value:
      !Sub
      - "https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logsV2:log-groups/log-group/%252Faws%252Flambda%252F${FunctionName}"
      - FunctionName: !Ref PinmeApi
